import asyncio
import logging
from datetime import datetime
from database import get_subscriptions, update_last_sent_post_id
from instagram_parser import get_new_posts, get_stories
from aiogram import Bot

async def check_updates(bot: Bot, user_id=None, username=None, action=None):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param bot: —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    :param username: –ù–∏–∫–Ω–µ–π–º Instagram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    :param action: –î–µ–π—Å—Ç–≤–∏–µ ("story" –∏–ª–∏ "post").
    """
    logging.info(f"{datetime.now()} - –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")

    if user_id and username:
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –¥–µ–π—Å—Ç–≤–∏–µ
        subscriptions = [(user_id, username, None)]
    else:
        # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
        subscriptions = get_subscriptions()

    for subscription in subscriptions:
        telegram_user_id, insta_username, last_sent_post_id = subscription

        if action == "post" or action is None:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
            new_posts = get_new_posts(insta_username, last_sent_post_id)
            if new_posts:
                for post in new_posts:
                    await bot.send_message(
                        chat_id=telegram_user_id,
                        text=(
                            f"–ù–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç {insta_username}:\n"
                            f"{post['url']}\n"
                            f"üëç –õ–∞–π–∫–æ–≤: {post['likes']} üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {post['comments']}"
                        )
                    )

                # –û–±–Ω–æ–≤–ª—è–µ–º last_sent_post_id
                last_post_id = new_posts[-1]["id"]
                update_last_sent_post_id(telegram_user_id, insta_username, last_post_id)

        if action == "story" or action is None:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏
            stories = get_stories(insta_username)
            if stories:
                for story in stories:
                    await bot.send_photo(
                        chat_id=telegram_user_id,
                        photo=story['url'],
                        caption=f"–ù–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ—Ç {insta_username}"
                    )

    logging.info(f"{datetime.now()} - –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.")

async def start_scheduler(bot: Bot):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞.
    :param bot: —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
    """
    while True:
        try:
            await check_updates(bot)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {e}")
        await asyncio.sleep(86400)  # 24 —á–∞—Å–∞
